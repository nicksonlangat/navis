{"ast":null,"code":"import _objectSpread from \"/Users/nicklangat/Desktop/portfolio/logistics/navis_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport Aside from '@/components/Aside.vue';\nimport NewParcelDrawer from '@/components/NewParcelDrawer.vue';\nimport EditParcelModal from '@/components/EditParcelModal.vue';\nimport EmptyIllustration from '@/components/EmptyIllustration.vue';\nimport { mapActions, mapGetters } from 'vuex';\nimport moment from \"moment\";\nexport default {\n  name: 'Parcels',\n  components: {\n    Aside: Aside,\n    NewParcelDrawer: NewParcelDrawer,\n    EditParcelModal: EditParcelModal,\n    EmptyIllustration: EmptyIllustration\n  },\n  data: function data() {\n    return {\n      text: \"\"\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    storedParcels: 'getStoredParcels'\n  })), {}, {\n    parcels: function parcels() {\n      var _this = this;\n      return this.storedParcels.filter(function (parcel) {\n        return parcel.parcel_number.toLowerCase().includes(_this.text.toLowerCase());\n      });\n    }\n  }),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    getAllParcels: 'getAllParcels'\n  })), {}, {\n    init: function init() {\n      this.getAllParcels({\n        cb: function cb() {}\n      });\n    },\n    formatDate: function formatDate(date) {\n      return moment(date).format(\"MMM Do YY\");\n    },\n    editParcel: function editParcel(parcel) {\n      this.emitter.emit(\"showParcelModal\", parcel);\n    }\n  }),\n  mounted: function mounted() {\n    var _this2 = this;\n    this.init();\n    this.emitter.on(\"reloadParcels\", function (value) {\n      _this2.init();\n    });\n  }\n};","map":{"version":3,"names":["Aside","NewParcelDrawer","EditParcelModal","EmptyIllustration","mapActions","mapGetters","moment","name","components","data","text","computed","_objectSpread","storedParcels","parcels","_this","filter","parcel","parcel_number","toLowerCase","includes","methods","getAllParcels","init","cb","formatDate","date","format","editParcel","emitter","emit","mounted","_this2","on","value"],"sources":["/Users/nicklangat/Desktop/portfolio/logistics/navis_frontend/src/views/Parcels.vue"],"sourcesContent":["<template>\n<div class=\"flex\">\n    <Aside />\n    <div class=\"w-10/12\">\n        <div class=\"pl-6 pr-6 font-base\">\n            <div class=\"flex font-base mt-5 justify-between\">\n                <div class=\"flex gap-4 items-center\">\n                    <h1 class=\"text-2xl font-extrabold\">Parcels</h1>\n                    <div class=\"relative ml-5\">\n                        <input v-model=\"text\" class=\"pl-8 w-56 bg-white py-1.5 rounded-md focus:outline-none font-base text-xs placeholder:text-xs\" type=\"text\" placeholder=\"Search by parcel number\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-5 text-gray-400 absolute top-1 left-1 h-5\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\" />\n                        </svg>\n                    </div>\n                </div>\n                <div class=\"flex gap-4 items-center\">\n                    <div>\n                        <NewParcelDrawer/>\n                        <EditParcelModal/>\n                    </div>\n                </div>\n            </div>\n            <div class=\"font-base mt-5 rounded-md overflow-x-auto\">\n                <table v-if=\"parcels.length\" class=\"w-full text-sm text-left text-gray-500\">\n                    <thead class=\"text-xs text-gray-950 uppercase bg-white border-b font-base\">\n                        <tr>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                parcel number\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                client\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                weight\n                            </th>\n                            \n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                item\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                status\n                            </th>\n                           \n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                date\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                contact\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                destination\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                action\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"parcel in parcels\" class=\"bg-white text-xs font-base border-b\">\n                            <td class=\"px-6 py-4 font-medium text-gray-950 whitespace-nowrap\">\n                                {{ parcel.parcel_number }}\n                            </td>\n                            <th scope=\"row\" class=\"px-6 py-4\">\n                                {{ parcel.client.first_name }} {{ parcel.client.last_name }}\n                            </th>\n                            <td class=\"px-6 py-4\">\n                               {{ parcel.weight }}\n                            </td>\n                            <td class=\"px-6 py-4\">\n                                {{ parcel.item }}\n                            </td>\n                            <td class=\"px-6 text-xs py-4\">\n                                <span v-if=\"parcel.status === 'DELAYED'\" class=\"bg-pink-200 text-pink-700 px-2 text-xs py-0.5 rounded\">{{ parcel.status }}</span>\n                                <span v-if=\"parcel.status === 'ON WAY'\" class=\"bg-amber-200 text-amber-700 px-2 text-xs py-0.5 rounded\">{{ parcel.status }}</span>\n                                <span v-if=\"parcel.status === 'ARRIVED'\" class=\"bg-emerald-200 text-emerald-700 px-2 text-xs py-0.5 rounded\">{{ parcel.status }}</span>\n                            </td>\n                            <td class=\"px-6 py-4\">\n                                {{ formatDate(parcel.created_at) }}\n                            </td>\n                            <td class=\"px-6 py-4\">\n                               {{ parcel.recipient_contact }}\n                            </td>\n                            <td class=\"px-6 py-4\">\n                              {{ parcel.destination.name }}\n                            </td>\n                            <td class=\"px-6 py-4\">\n                                <svg @click=\"editParcel(parcel)\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 text-gray-500 cursor-pointer h-4\">\n                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" />\n                                </svg>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div v-else>\n                <EmptyIllustration data=\"parcels\"/>\n               </div>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n<script>\nimport Aside from '@/components/Aside.vue';\nimport NewParcelDrawer from '@/components/NewParcelDrawer.vue';\nimport EditParcelModal from '@/components/EditParcelModal.vue';\nimport EmptyIllustration from '@/components/EmptyIllustration.vue';\nimport {\n    mapActions,\n    mapGetters\n} from 'vuex';\nimport moment from \"moment\"\nexport default {\n    name: 'Parcels',\n    components: {\n        Aside,\n        NewParcelDrawer,\n        EditParcelModal,\n        EmptyIllustration\n    },\n    data() {\n        return {\n            text: \"\"\n        }\n    },\n    computed: {\n        ...mapGetters({\n            storedParcels: 'getStoredParcels'\n        }),\n        parcels() {\n            return this.storedParcels.filter((parcel) => {\n                return parcel.parcel_number.toLowerCase().includes(this.text.toLowerCase())\n            }) \n        }\n    },\n    methods: {\n        ...mapActions({\n            getAllParcels: 'getAllParcels',\n        }),\n        init() {\n            this.getAllParcels({\n                cb: () => {}\n            })\n        },\n        formatDate(date) {\n            return moment(date).format(\"MMM Do YY\")\n        },\n        editParcel(parcel) {\n            this.emitter.emit(\"showParcelModal\", parcel)\n        }\n    },\n    mounted() {\n        this.init()\n        this.emitter.on(\"reloadParcels\", value => {\n            this.init()\n        })\n    }\n}\n</script>\n<style>\nhtml {\n    background-color: #F1F1FB;\n}\n</style>\n"],"mappings":";;;;;AAsGA,OAAOA,KAAI,MAAO,wBAAwB;AAC1C,OAAOC,eAAc,MAAO,kCAAkC;AAC9D,OAAOC,eAAc,MAAO,kCAAkC;AAC9D,OAAOC,iBAAgB,MAAO,oCAAoC;AAClE,SACIC,UAAU,EACVC,UAAS,QACN,MAAM;AACb,OAAOC,MAAK,MAAO,QAAO;AAC1B,eAAe;EACXC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE;IACRR,KAAK,EAALA,KAAK;IACLC,eAAe,EAAfA,eAAe;IACfC,eAAe,EAAfA,eAAe;IACfC,iBAAgB,EAAhBA;EACJ,CAAC;EACDM,IAAI,WAAAA,KAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;IACV;EACJ,CAAC;EACDC,QAAQ,EAAAC,aAAA,CAAAA,aAAA,KACDP,UAAU,CAAC;IACVQ,aAAa,EAAE;EACnB,CAAC,CAAC;IACFC,OAAO,WAAAA,QAAA,EAAG;MAAA,IAAAC,KAAA;MACN,OAAO,IAAI,CAACF,aAAa,CAACG,MAAM,CAAC,UAACC,MAAM,EAAK;QACzC,OAAOA,MAAM,CAACC,aAAa,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,KAAI,CAACL,IAAI,CAACS,WAAW,CAAC,CAAC;MAC9E,CAAC;IACL;EAAA,EACH;EACDE,OAAO,EAAAT,aAAA,CAAAA,aAAA,KACAR,UAAU,CAAC;IACVkB,aAAa,EAAE;EACnB,CAAC,CAAC;IACFC,IAAI,WAAAA,KAAA,EAAG;MACH,IAAI,CAACD,aAAa,CAAC;QACfE,EAAE,EAAE,SAAAA,GAAA,EAAM,CAAC;MACf,CAAC;IACL,CAAC;IACDC,UAAU,WAAAA,WAACC,IAAI,EAAE;MACb,OAAOpB,MAAM,CAACoB,IAAI,CAAC,CAACC,MAAM,CAAC,WAAW;IAC1C,CAAC;IACDC,UAAU,WAAAA,WAACX,MAAM,EAAE;MACf,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,iBAAiB,EAAEb,MAAM;IAC/C;EAAA,EACH;EACDc,OAAO,WAAAA,QAAA,EAAG;IAAA,IAAAC,MAAA;IACN,IAAI,CAACT,IAAI,CAAC;IACV,IAAI,CAACM,OAAO,CAACI,EAAE,CAAC,eAAe,EAAE,UAAAC,KAAI,EAAK;MACtCF,MAAI,CAACT,IAAI,CAAC;IACd,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}