{"ast":null,"code":"import _objectSpread from \"/Users/nicklangat/Desktop/portfolio/logistics/navis_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { TransitionRoot, TransitionChild, Dialog, DialogPanel, DialogTitle } from '@headlessui/vue';\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  components: {\n    TransitionRoot: TransitionRoot,\n    TransitionChild: TransitionChild,\n    Dialog: Dialog,\n    DialogPanel: DialogPanel,\n    DialogTitle: DialogTitle\n  },\n  data: function data() {\n    return {\n      isOpen: false,\n      parcel: {\n        client: \"\",\n        item: \"\",\n        weight: \"\",\n        destination: \"\",\n        recipient_contact: \"\",\n        status: \"\"\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    storedClients: 'getStoredClients',\n    storedLocations: 'getStoredLocations'\n  })), {}, {\n    clients: function clients() {\n      return this.storedClients;\n    },\n    locations: function locations() {\n      return this.storedLocations;\n    }\n  }),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    updateParcel: 'updateParcel',\n    deleteParcel: 'deleteParcel',\n    getAllClients: 'getAllClients',\n    getAllLocations: 'getAllLocations'\n  })), {}, {\n    toggleModal: function toggleModal() {\n      this.isOpen = !this.isOpen;\n    },\n    updateParcelDetails: function updateParcelDetails() {\n      var _this = this;\n      this.updateParcel({\n        uuid: this.parcel.id,\n        payload: this.parcel,\n        cb: function cb(res) {\n          _this.toggleModal();\n          _this.emitter.emit(\"reloadParcels\");\n        }\n      });\n    },\n    deleteParcelDetails: function deleteParcelDetails() {\n      var _this2 = this;\n      this.deleteParcel({\n        uuid: this.parcel.id,\n        cb: function cb(res) {\n          _this2.toggleModal();\n          _this2.emitter.emit(\"reloadParcels\");\n        }\n      });\n    }\n  }),\n  mounted: function mounted() {\n    var _this3 = this;\n    this.emitter.on(\"showParcelModal\", function (value) {\n      _this3.parcel = value;\n      _this3.toggleModal();\n    });\n    this.getAllClients({\n      cb: function cb() {}\n    });\n    this.getAllLocations({\n      cb: function cb() {}\n    });\n  }\n};","map":{"version":3,"names":["TransitionRoot","TransitionChild","Dialog","DialogPanel","DialogTitle","mapActions","mapGetters","components","data","isOpen","parcel","client","item","weight","destination","recipient_contact","status","computed","_objectSpread","storedClients","storedLocations","clients","locations","methods","updateParcel","deleteParcel","getAllClients","getAllLocations","toggleModal","updateParcelDetails","_this","uuid","id","payload","cb","res","emitter","emit","deleteParcelDetails","_this2","mounted","_this3","on","value"],"sources":["/Users/nicklangat/Desktop/portfolio/logistics/navis_frontend/src/components/EditParcelModal.vue"],"sourcesContent":["<template>\n<TransitionRoot appear :show=\"isOpen\" as=\"template\">\n    <Dialog as=\"div\" @close=\"toggleModal\" class=\"relative z-10\">\n        <TransitionChild as=\"template\" enter=\"duration-300 ease-out\" enter-from=\"opacity-0\" enter-to=\"opacity-100\" leave=\"duration-200 ease-in\" leave-from=\"opacity-100\" leave-to=\"opacity-0\">\n            <div class=\"fixed inset-0 bg-black bg-opacity-25\" />\n        </TransitionChild>\n        <div class=\"fixed inset-0 overflow-y-auto\">\n            <div class=\"flex min-h-full items-center justify-center p-4 text-center\">\n                <TransitionChild as=\"template\" enter=\"duration-300 ease-out\" enter-from=\"opacity-0 scale-95\" enter-to=\"opacity-100 scale-100\" leave=\"duration-200 ease-in\" leave-from=\"opacity-100 scale-100\" leave-to=\"opacity-0 scale-95\">\n                    <DialogPanel class=\"w-full max-w-xl transform overflow-hidden rounded-md bg-white p-6 text-left align-middle shadow-xl transition-all\">\n                        <div class=\" flex justify-between\">\n                            <DialogTitle as=\"h3\" class=\"text-lg font-medium leading-6 text-gray-900\">\n                            Parcel {{parcel?.parcel_number}}\n                        </DialogTitle>\n                        <button @click=\"deleteParcelDetails\" class=\"text-xs bg-red-500 text-white rounded-md py-1.5 px-6\">Delete</button>\n                        </div>\n                        <div class=\"mt-2\">\n                            <form class=\"flex text-xs font-base flex-col gap-3\">\n                                <div class=\"flex flex-col gap-1\">\n                                    <label for=\"client\">Client</label>\n                                    <select v-model=\"parcel.client\" type=\"text\" class=\"bg-white border border-gray-200 focus:outline-none focus:right-0 py-2 rounded-md pl-3 font-base\">\n                                        <option v-for=\"client in clients\" :value=\"client.id\">{{ client.first_name }} {{ client.last_name }}</option>\n                                    </select>\n                                </div>\n                                <div class=\"flex flex-col gap-1\">\n                                    <label for=\"item\">Item</label>\n                                    <input v-model=\"parcel.item\" type=\"text\" class=\"bg-white border border-gray-200 focus:outline-none focus:right-0 py-2 rounded-md pl-3 placeholder:text-gray-500 font-base\" placeholder=\"E.g Macbook Air\">\n                                </div>\n                                <div class=\"flex flex-col gap-1\">\n                                    <label for=\"weight\">Weight</label>\n                                    <input v-model=\"parcel.weight\" type=\"text\" class=\"bg-white border border-gray-200 focus:outline-none focus:right-0 py-2 rounded-md pl-3 placeholder:text-gray-500 font-base\" placeholder=\"E.g 50\">\n                                </div>\n                                <div class=\"flex flex-col gap-1\">\n                                    <label for=\"location\">Destination</label>\n                                    <select v-model=\"parcel.destination\" type=\"text\" class=\"bg-white border border-gray-200 focus:outline-none focus:right-0 py-2 rounded-md pl-3 font-base\">\n                                    <option v-for=\"location in locations\" :value=\"location.id\">{{ location.name }}</option>\n                                    </select>\n                                </div>\n                                <div class=\"flex flex-col gap-1\">\n                                    <label for=\"recipient_contact\">Recipient contact</label>\n                                    <input v-model=\"parcel.recipient_contact\" type=\"text\" class=\"bg-white border border-gray-200 focus:outline-none focus:right-0 py-2 rounded-md pl-3 placeholder:text-gray-500 font-base\" placeholder=\"E.g 0712345676\">\n                                </div>\n                                <div class=\"flex flex-col gap-1\">\n                                    <label for=\"status\">Status</label>\n                                    <select v-model=\"parcel.status\" type=\"text\" class=\"bg-white border border-gray-200 focus:outline-none focus:right-0 py-2 rounded-md pl-3 placeholder:text-gray-500 font-base\" placeholder=\"Brown\">\n                                        <option value=\"DELAYED\">Delayed</option>\n                                        <option value=\"ON WAY\">On way</option>\n                                        <option value=\"ARRIVED\">Arrived</option>\n                                    </select>\n                                </div>\n                                <div>\n                                    <button @click.prevent=\"updateParcelDetails\" class=\"bg-violet-600 w-full text-center font-base text-white py-2 px-4 rounded-md\">\n                                        Update parcel\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </DialogPanel>\n                </TransitionChild>\n            </div>\n        </div>\n    </Dialog>\n</TransitionRoot>\n</template>\n\n<script>\nimport {\n    TransitionRoot,\n    TransitionChild,\n    Dialog,\n    DialogPanel,\n    DialogTitle,\n} from '@headlessui/vue'\nimport { mapActions, mapGetters } from 'vuex'\n\nexport default {\n    components: {\n        TransitionRoot,\n        TransitionChild,\n        Dialog,\n        DialogPanel,\n        DialogTitle,\n    },\n    data() {\n        return {\n            isOpen: false,\n            parcel: {\n                client: \"\",\n                item: \"\",\n                weight: \"\",\n                destination: \"\",\n                recipient_contact: \"\",\n                status: \"\"\n            }\n            \n        }\n    },\n    computed: {\n        ...mapGetters({\n            storedClients: 'getStoredClients',\n            storedLocations: 'getStoredLocations'\n        }),\n        clients() {\n            return this.storedClients\n        },\n        locations() {\n            return this.storedLocations\n        }\n    },\n    methods: {\n        ...mapActions({\n            updateParcel: 'updateParcel',\n            deleteParcel: 'deleteParcel',\n            getAllClients: 'getAllClients',\n            getAllLocations: 'getAllLocations',\n        }),\n        toggleModal() {\n            this.isOpen = !this.isOpen\n        },\n        updateParcelDetails() {\n            this.updateParcel({\n                uuid: this.parcel.id,\n                payload: this.parcel,\n                cb: (res => {\n                    this.toggleModal()\n                    this.emitter.emit(\"reloadParcels\")\n                })\n            })\n        },\n        deleteParcelDetails() {\n            this.deleteParcel({\n                uuid: this.parcel.id,\n                cb: (res => {\n                    this.toggleModal()\n                    this.emitter.emit(\"reloadParcels\")\n                })\n            })\n        }\n    },\n    mounted() {\n        this.emitter.on(\"showParcelModal\", value => {\n            this.parcel = value\n            this.toggleModal()\n        })\n        this.getAllClients({\n            cb: () => {}\n        })\n        this.getAllLocations({\n            cb: () => {}\n        })\n    }\n}\n</script>\n"],"mappings":";AAkEA,SACIA,cAAc,EACdC,eAAe,EACfC,MAAM,EACNC,WAAW,EACXC,WAAW,QACR,iBAAgB;AACvB,SAASC,UAAU,EAAEC,UAAS,QAAS,MAAK;AAE5C,eAAe;EACXC,UAAU,EAAE;IACRP,cAAc,EAAdA,cAAc;IACdC,eAAe,EAAfA,eAAe;IACfC,MAAM,EAANA,MAAM;IACNC,WAAW,EAAXA,WAAW;IACXC,WAAW,EAAXA;EACJ,CAAC;EACDI,IAAI,WAAAA,KAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE;QACJC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,WAAW,EAAE,EAAE;QACfC,iBAAiB,EAAE,EAAE;QACrBC,MAAM,EAAE;MACZ;IAEJ;EACJ,CAAC;EACDC,QAAQ,EAAAC,aAAA,CAAAA,aAAA,KACDZ,UAAU,CAAC;IACVa,aAAa,EAAE,kBAAkB;IACjCC,eAAe,EAAE;EACrB,CAAC,CAAC;IACFC,OAAO,WAAAA,QAAA,EAAG;MACN,OAAO,IAAI,CAACF,aAAY;IAC5B,CAAC;IACDG,SAAS,WAAAA,UAAA,EAAG;MACR,OAAO,IAAI,CAACF,eAAc;IAC9B;EAAA,EACH;EACDG,OAAO,EAAAL,aAAA,CAAAA,aAAA,KACAb,UAAU,CAAC;IACVmB,YAAY,EAAE,cAAc;IAC5BC,YAAY,EAAE,cAAc;IAC5BC,aAAa,EAAE,eAAe;IAC9BC,eAAe,EAAE;EACrB,CAAC,CAAC;IACFC,WAAW,WAAAA,YAAA,EAAG;MACV,IAAI,CAACnB,MAAK,GAAI,CAAC,IAAI,CAACA,MAAK;IAC7B,CAAC;IACDoB,mBAAmB,WAAAA,oBAAA,EAAG;MAAA,IAAAC,KAAA;MAClB,IAAI,CAACN,YAAY,CAAC;QACdO,IAAI,EAAE,IAAI,CAACrB,MAAM,CAACsB,EAAE;QACpBC,OAAO,EAAE,IAAI,CAACvB,MAAM;QACpBwB,EAAE,EAAG,SAAAA,GAAAC,GAAE,EAAK;UACRL,KAAI,CAACF,WAAW,CAAC;UACjBE,KAAI,CAACM,OAAO,CAACC,IAAI,CAAC,eAAe;QACrC;MACJ,CAAC;IACL,CAAC;IACDC,mBAAmB,WAAAA,oBAAA,EAAG;MAAA,IAAAC,MAAA;MAClB,IAAI,CAACd,YAAY,CAAC;QACdM,IAAI,EAAE,IAAI,CAACrB,MAAM,CAACsB,EAAE;QACpBE,EAAE,EAAG,SAAAA,GAAAC,GAAE,EAAK;UACRI,MAAI,CAACX,WAAW,CAAC;UACjBW,MAAI,CAACH,OAAO,CAACC,IAAI,CAAC,eAAe;QACrC;MACJ,CAAC;IACL;EAAA,EACH;EACDG,OAAO,WAAAA,QAAA,EAAG;IAAA,IAAAC,MAAA;IACN,IAAI,CAACL,OAAO,CAACM,EAAE,CAAC,iBAAiB,EAAE,UAAAC,KAAI,EAAK;MACxCF,MAAI,CAAC/B,MAAK,GAAIiC,KAAI;MAClBF,MAAI,CAACb,WAAW,CAAC;IACrB,CAAC;IACD,IAAI,CAACF,aAAa,CAAC;MACfQ,EAAE,EAAE,SAAAA,GAAA,EAAM,CAAC;IACf,CAAC;IACD,IAAI,CAACP,eAAe,CAAC;MACjBO,EAAE,EAAE,SAAAA,GAAA,EAAM,CAAC;IACf,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}