{"ast":null,"code":"import _toConsumableArray from \"/Users/nicklangat/Desktop/portfolio/logistics/navis_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/nicklangat/Desktop/portfolio/logistics/navis_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport Aside from '@/components/Aside.vue';\nimport moment from 'moment';\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'Shipment',\n  components: {\n    Aside: Aside\n  },\n  data: function data() {\n    return {\n      shipmentId: null,\n      selectedParcels: [],\n      unselectedParcels: [],\n      cc: \"\"\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    storedShipments: 'getStoredShipments',\n    storedParcels: 'getStoredParcels'\n  })), {}, {\n    shipment: function shipment() {\n      var _this = this;\n      return this.storedShipments.find(function (shipment) {\n        return shipment.id == _this.shipmentId;\n      });\n    },\n    parcels: function parcels() {\n      var _this2 = this;\n      return this.storedParcels.filter(function (parcel) {\n        var _this2$shipment;\n        return parcel.destination.id == ((_this2$shipment = _this2.shipment) === null || _this2$shipment === void 0 ? void 0 : _this2$shipment.route_to.id);\n      });\n    },\n    shipmentParcels: function shipmentParcels() {\n      return this.shipment.parcels.map(function (item) {\n        return item.id;\n      });\n    }\n  }),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    getAllShipments: 'getAllShipments',\n    getAllParcels: 'getAllParcels',\n    updateShipment: 'updateShipment'\n  })), {}, {\n    init: function init() {\n      this.getAllShipments({\n        cb: function cb() {}\n      });\n      this.getAllParcels({\n        cb: function cb() {}\n      });\n    },\n    formatDate: function formatDate(date) {\n      return moment(date).format(\"MMM Do YY\");\n    },\n    percentageCalculator: function percentageCalculator(value, total) {\n      return (value / total * 100).toFixed(2);\n    },\n    addToParcelList: function addToParcelList(parcel) {\n      this.shipmentParcels.includes(parcel.id) ? this.unselectedParcels.push(parcel.id) : this.selectedParcels.push(parcel.id);\n    },\n    updateShipmentDetails: function updateShipmentDetails() {\n      var _this3 = this;\n      this.shipment.truck = this.shipment.truck.id;\n      this.shipment.driver = this.shipment.driver.id;\n      this.shipment.route_from = this.shipment.route_from.id;\n      this.shipment.route_to = this.shipment.route_to.id;\n      if (this.unselectedParcels.length) {\n        this.unselectedParcels.forEach(function (parcel) {\n          var index = _this3.shipmentParcels.indexOf(parcel);\n          if (index > -1) {\n            _this3.shipmentParcels.splice(index, 1);\n          }\n        });\n      }\n      this.shipment.parcels = [].concat(_toConsumableArray(this.shipmentParcels), _toConsumableArray(this.selectedParcels));\n      this.updateShipment({\n        uuid: this.shipment.id,\n        payload: this.shipment,\n        cb: function cb() {\n          _this3.init();\n        }\n      });\n    }\n  }),\n  mounted: function mounted() {\n    this.shipmentId = this.$route.params['id'];\n    this.init();\n  }\n};","map":{"version":3,"names":["Aside","moment","mapActions","mapGetters","name","components","data","shipmentId","selectedParcels","unselectedParcels","cc","computed","_objectSpread","storedShipments","storedParcels","shipment","_this","find","id","parcels","_this2","filter","parcel","_this2$shipment","destination","route_to","shipmentParcels","map","item","methods","getAllShipments","getAllParcels","updateShipment","init","cb","formatDate","date","format","percentageCalculator","value","total","toFixed","addToParcelList","includes","push","updateShipmentDetails","_this3","truck","driver","route_from","length","forEach","index","indexOf","splice","concat","_toConsumableArray","uuid","payload","mounted","$route","params"],"sources":["/Users/nicklangat/Desktop/portfolio/logistics/navis_frontend/src/views/Shipment.vue"],"sourcesContent":["<template>\n<div class=\"flex\">\n    <Aside />\n    <div class=\"w-10/12\">\n        <div class=\"pl-6 pr-6 font-base\">\n            <div class=\"font-base mt-5\">\n                <h3 class=\"text-gray-400 text-sm\">Shipments / <span class=\"text-violet-600\">{{ shipmentId }}</span> </h3>\n                <h1 class=\"text-2xl\">{{ shipment?.route_from.name }} - {{ shipment?.route_to.name }} <span class=\"text-xs text-gray-500\">{{ formatDate(shipment?.departure_date) }}</span></h1>\n            </div>\n\n            <div class=\"grid font-base mt-8 grid-cols-2 gap-y-4 gap-4\">\n                <div class=\"bg-white rounded-md pb-5\">\n                    <div class=\"flex font-base justify-between ml-5 mr-5 mt-3\">\n                        <h3 class=\"text-xl\">Truck load</h3>\n                        <h2 class=\"text-yellow-600 text-2xl\">{{percentageCalculator(0, shipment?.truck.carry_weight) }} %</h2>\n                    </div>\n                    <div class=\"flex justify-between ml-5 mr-5 mt-5 text-lg\">\n                        <ul class=\"text-gray-500 flex font-base flex-col gap-5\">\n                            <li>\n                                <p>Available,kg</p>\n                                <p class=\"text-gray-900\">2000/{{ shipment?.truck.carry_weight }}</p>\n                            </li>\n\n                        </ul>\n                        <img class=\"w-3/4\" src=\"../assets/van.svg\" alt=\"\">\n                    </div>\n                    <div class=\"flex gap-2 ml-5 mr-5 mt-5 items-center text-gray-700 font-base\">\n                        <h3>Upper tier</h3>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-5 h-5 text-gray-400 \">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\n                        </svg>\n                    </div>\n                    <div class=\"grid grid-cols-3 mt-2 ml-5 mr-5 gap-5\">\n                        <div class=\"bg-[#f1f1fb] h-20 rounded-md\">\n\n                        </div>\n                        <div class=\"bg-emerald-200 h-20 rounded-md\">\n\n                        </div>\n                        <div class=\"bg-[#f1f1fb] h-20 rounded-md\">\n\n                        </div>\n\n                    </div>\n                    <div class=\"flex gap-2 ml-5 mr-5 mt-5 items-center text-gray-700 font-base\">\n                        <h3>Middle tier</h3>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-5 h-5 text-gray-400 \">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\n                        </svg>\n                    </div>\n                    <div class=\"grid grid-cols-3 mt-2 ml-5 mr-5 gap-5\">\n                        <div class=\"bg-[#f1f1fb] h-20 rounded-md\">\n\n                        </div>\n                        <div class=\"bg-emerald-200 h-20 rounded-md\">\n\n                        </div>\n                        <div class=\"bg-[#f1f1fb] h-20 rounded-md\">\n\n                        </div>\n\n                    </div>\n                    <div class=\"flex gap-2 ml-5 mr-5 mt-5 items-center text-gray-700 font-base\">\n                        <h3>Lower tier</h3>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-5 h-5 text-gray-400 \">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\n                        </svg>\n                    </div>\n                    <div class=\"grid grid-cols-3 mt-2 ml-5 mr-5 gap-5\">\n                        <div class=\"bg-[#f1f1fb] h-20 rounded-md\">\n\n                        </div>\n                        <div class=\"bg-emerald-200 h-20 rounded-md\">\n\n                        </div>\n                        <div class=\"bg-[#f1f1fb] h-20 rounded-md\">\n\n                        </div>\n\n                    </div>\n                    <div class=\"flex justify-between mr-5 mt-5 ml-5 text-sm font-base\">\n                        <button class=\"bg-[#f1f1fb] py-1.5 px-4 rounded-md text-violet-600\">View parcels list</button>\n                        <button class=\"bg-[#f1f1fb] py-1.5 px-4 rounded-md text-violet-600\">Finish loading</button>\n                    </div>\n                </div>\n                <div class=\"bg-white rounded-md pb-5\">\n                    <div class=\"flex items-center justify-between font-base ml-3 mt-2 mr-3\">\n                        <h3 class=\"font-bold\">Available packages</h3>\n                        <button @click.prevent=\"updateShipmentDetails\" class=\"bg-violet-600 text-xs py-1 px-4 rounded-md text-white\">Add selections to truck</button>\n                    </div>\n                    <div class=\"relative mt-2 font-base overflow-x-auto\">\n                        <table class=\"w-full text-xs text-left text-gray-500 font-base accent-violet-600\">\n                            <thead class=\"text-xs text-gray-700 uppercase bg-white border-b\">\n                                <tr>\n                                    <th scope=\"col\" class=\"p-4\">\n                                        <div class=\"flex items-center\">\n                                            <input id=\"checkbox-all-search\" type=\"checkbox\" class=\"w-4 h-4 text-violet-600 bg-gray-100 border-gray-300 rounded\">\n                                            <label for=\"checkbox-all-search\" class=\"sr-only\">checkbox</label>\n                                        </div>\n                                    </th>\n                                    <th scope=\"col\" class=\"px-6 py-3\">\n                                        Parcel number\n                                    </th>\n                                    <th scope=\"col\" class=\"px-6 py-3\">\n                                        Weight\n                                    </th>\n                                    <th scope=\"col\" class=\"px-6 py-3\">\n                                        destination\n                                    </th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"parcel in parcels\" class=\"bg-white border-b font-base\">\n                                    <td class=\"w-4 p-4\">\n                                        <div class=\"flex items-center\">\n                                            <input :checked=\"shipmentParcels.includes(parcel.id)\" @click=\"addToParcelList(parcel)\" type=\"checkbox\" class=\"w-4 h-4 text-violet-600 bg-gray-100 border-gray-300 rounded\">\n                                            <label for=\"checkbox\" class=\"sr-only\">checkbox</label>\n                                        </div>\n                                    </td>\n                                    <th scope=\"row\" class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap\">\n                                        {{ parcel.parcel_number }}\n                                    </th>\n                                    <td class=\"px-6 py-4\">\n                                        {{ parcel.weight }}\n                                    </td>\n                                    <td class=\"px-6 py-4\">\n                                        {{ parcel.destination.name }}\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport Aside from '@/components/Aside.vue';\nimport moment from 'moment';\nimport {\n    mapActions,\n    mapGetters\n} from 'vuex';\n\nexport default {\n    name: 'Shipment',\n    components: {\n        Aside\n    },\n    data() {\n        return {\n            shipmentId: null,\n            selectedParcels: [],\n            unselectedParcels: [],\n            cc: \"\"\n        }\n    },\n    computed: {\n        ...mapGetters({\n            storedShipments: 'getStoredShipments',\n            storedParcels: 'getStoredParcels'\n        }),\n        shipment() {\n            return this.storedShipments.find((shipment) => {\n                return shipment.id == this.shipmentId\n            })\n        },\n        parcels() {\n            return this.storedParcels.filter((parcel) => {\n                return parcel.destination.id == this.shipment?.route_to.id\n            }) \n        },\n        shipmentParcels() {\n            return this.shipment.parcels.map(item => item.id)\n        }\n    },\n    methods: {\n        ...mapActions({\n            getAllShipments: 'getAllShipments',\n            getAllParcels: 'getAllParcels',\n            updateShipment: 'updateShipment',\n        }),\n        init() {\n            this.getAllShipments({\n                cb: () => {}\n            })\n            this.getAllParcels({\n                cb: () => {}\n            })\n        },\n        formatDate(date) {\n            return moment(date).format(\"MMM Do YY\")\n        },\n        percentageCalculator(value, total) {\n            return ((value / total) * 100).toFixed(2)\n        },\n        addToParcelList(parcel) {\n            this.shipmentParcels.includes(parcel.id) ? this.unselectedParcels.push(parcel.id) : this.selectedParcels.push(parcel.id)\n        },\n        updateShipmentDetails() {\n            this.shipment.truck = this.shipment.truck.id\n            this.shipment.driver = this.shipment.driver.id\n            this.shipment.route_from = this.shipment.route_from.id\n            this.shipment.route_to = this.shipment.route_to.id\n            \n            if(this.unselectedParcels.length) {\n                this.unselectedParcels.forEach((parcel)=>{\n                    const index = this.shipmentParcels.indexOf(parcel)\n                        if (index > -1) {\n                            this.shipmentParcels.splice(index, 1)\n                        }\n                })\n            }\n            \n            this.shipment.parcels = [...this.shipmentParcels, ...this.selectedParcels]\n            \n            this.updateShipment({\n                uuid: this.shipment.id,\n                payload: this.shipment,\n                cb: (() => {\n                    this.init()\n                })\n            })\n        },\n    },\n    mounted() {\n        this.shipmentId = this.$route.params['id']\n        this.init()\n    }\n}\n</script>\n\n<style>\nhtml {\n    background-color: #F1F1FB;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}