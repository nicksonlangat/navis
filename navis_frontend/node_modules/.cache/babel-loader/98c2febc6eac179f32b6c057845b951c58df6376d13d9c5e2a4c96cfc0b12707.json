{"ast":null,"code":"import Aside from '@/components/Aside.vue';\nimport Search from '@/components/Search.vue';\nimport NewClientDrawer from '@/components/NewClientDrawer.vue';\nimport EditClientModal from '@/components/EditClientModal.vue';\nimport { mapActions, mapGetters } from 'vuex';\nimport moment from \"moment\";\nexport default {\n  name: 'Clients',\n  components: {\n    Aside,\n    Search,\n    NewClientDrawer,\n    EditClientModal\n  },\n  data() {\n    return {\n      text: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters({\n      storedClients: 'getStoredClients'\n    }),\n    clients() {\n      return this.storedClients.filter(client => {\n        return client.identity_number.toLowerCase().includes(this.text.toLowerCase()) || client.first_name.toLowerCase().includes(this.text.toLowerCase());\n      });\n    }\n  },\n  methods: {\n    ...mapActions({\n      getAllClients: 'getAllClients'\n    }),\n    init() {\n      this.getAllClients({\n        cb: res => {}\n      });\n    },\n    formatDate(date) {\n      return moment(date).format(\"MMM Do YY\");\n    },\n    editClient(client) {\n      this.emitter.emit(\"showClientModal\", client);\n    }\n  },\n  mounted() {\n    this.init();\n    this.emitter.on(\"reloadClients\", value => {\n      this.init();\n    });\n  }\n};","map":{"version":3,"names":["Aside","Search","NewClientDrawer","EditClientModal","mapActions","mapGetters","moment","name","components","data","text","computed","storedClients","clients","filter","client","identity_number","toLowerCase","includes","first_name","methods","getAllClients","init","cb","res","formatDate","date","format","editClient","emitter","emit","mounted","on","value"],"sources":["/Users/nicklangat/Desktop/portfolio/logistics/src/views/Clients.vue"],"sourcesContent":["<template>\n<div class=\"flex\">\n    <Aside />\n    <div class=\"w-10/12\">\n        <div class=\"pl-6 pr-6 font-base\">\n            <div class=\"flex font-base mt-5 justify-between\">\n                <div class=\"flex gap-4 items-center\">\n                    <h1 class=\"text-2xl font-extrabold\">Clients</h1>\n                    <div class=\"relative ml-5\">\n                        <input v-model=\"text\" class=\"pl-8 w-72 bg-white py-1.5 rounded-md focus:outline-none font-base text-xs placeholder:text-xs\" type=\"text\" placeholder=\"Search clients by name or identity number\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-5 text-gray-400 absolute top-1 left-1 h-5\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\" />\n                        </svg>\n                    </div>\n                </div>\n                <div class=\"flex gap-4 items-center\">\n                    <div>\n                        <NewClientDrawer />\n                        <EditClientModal/>\n                    </div>\n                </div>\n            </div>\n            <div class=\"font-base mt-5 rounded-md overflow-x-auto\">\n                <table class=\"w-full text-sm text-left text-gray-500\">\n                    <thead class=\"text-xs text-gray-950 uppercase bg-white border-b font-base\">\n                        <tr>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                first name\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                last name\n                            </th>\n\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                email\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                phone number\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                id number\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                location\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                date added\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                action\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"\">\n                        <tr v-for=\"client in clients\" class=\"bg-white text-xs font-base border-b\">\n                            <th scope=\"row\" class=\"px-6 py-4 font-medium text-gray-950 whitespace-nowrap\">\n                                {{ client.first_name }}\n                            </th>\n                            <td class=\"px-6 py-4\">\n                                {{ client.last_name }}\n                            </td>\n                            <td class=\"px-6 py-4\">\n                                {{ client.email }}\n                            </td>\n                            <td class=\"px-6 py-4\">\n                                {{ client.phone_number }}\n                            </td>\n                            <td class=\"px-6 py-4\">\n                                {{ client.identity_number }}\n                            </td>\n                            <td class=\"px-6 py-4\">\n                                {{ client.location }}\n                            </td>\n                            <td class=\"px-6 py-4\">\n                                {{ formatDate(client.created_at) }}\n                            </td>\n                            <td class=\"px-6 py-4\">\n                                <svg @click=\"editClient\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 text-gray-500 h-4\">\n                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" />\n                                </svg>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport Aside from '@/components/Aside.vue';\nimport Search from '@/components/Search.vue';\nimport NewClientDrawer from '@/components/NewClientDrawer.vue';\nimport EditClientModal from '@/components/EditClientModal.vue';\nimport {\n    mapActions,\n    mapGetters\n} from 'vuex';\nimport moment from \"moment\"\nexport default {\n    name: 'Clients',\n    components: {\n        Aside,\n        Search,\n        NewClientDrawer,\n        EditClientModal\n    },\n    data() {\n        return {\n            text: \"\"\n        }\n    },\n    computed: {\n        ...mapGetters({\n            storedClients: 'getStoredClients'\n        }),\n        clients() {\n            return this.storedClients.filter((client) => {\n                return client.identity_number.toLowerCase().includes(this.text.toLowerCase()) || client.first_name.toLowerCase().includes(this.text.toLowerCase())\n            })\n        }\n    },\n    methods: {\n        ...mapActions({\n            getAllClients: 'getAllClients',\n        }),\n        init() {\n            this.getAllClients({\n                cb: (res) => {}\n            })\n        },\n        formatDate(date) {\n            return moment(date).format(\"MMM Do YY\")\n        },\n        editClient(client) {\n            this.emitter.emit(\"showClientModal\", client)\n        }\n    },\n    mounted() {\n        this.init()\n        this.emitter.on(\"reloadClients\", value => {\n            this.init()\n        })\n    }\n}\n</script>\n\n<style>\nhtml {\n    background-color: #F1F1FB;\n}\n</style>\n"],"mappings":"AA2FA,OAAOA,KAAI,MAAO,wBAAwB;AAC1C,OAAOC,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,eAAc,MAAO,kCAAkC;AAC9D,OAAOC,eAAc,MAAO,kCAAkC;AAC9D,SACIC,UAAU,EACVC,UAAS,QACN,MAAM;AACb,OAAOC,MAAK,MAAO,QAAO;AAC1B,eAAe;EACXC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE;IACRR,KAAK;IACLC,MAAM;IACNC,eAAe;IACfC;EACJ,CAAC;EACDM,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;IACV;EACJ,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGN,UAAU,CAAC;MACVO,aAAa,EAAE;IACnB,CAAC,CAAC;IACFC,OAAOA,CAAA,EAAG;MACN,OAAO,IAAI,CAACD,aAAa,CAACE,MAAM,CAAEC,MAAM,IAAK;QACzC,OAAOA,MAAM,CAACC,eAAe,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACR,IAAI,CAACO,WAAW,CAAC,CAAC,KAAKF,MAAM,CAACI,UAAU,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACR,IAAI,CAACO,WAAW,CAAC,CAAC;MACrJ,CAAC;IACL;EACJ,CAAC;EACDG,OAAO,EAAE;IACL,GAAGhB,UAAU,CAAC;MACViB,aAAa,EAAE;IACnB,CAAC,CAAC;IACFC,IAAIA,CAAA,EAAG;MACH,IAAI,CAACD,aAAa,CAAC;QACfE,EAAE,EAAGC,GAAG,IAAK,CAAC;MAClB,CAAC;IACL,CAAC;IACDC,UAAUA,CAACC,IAAI,EAAE;MACb,OAAOpB,MAAM,CAACoB,IAAI,CAAC,CAACC,MAAM,CAAC,WAAW;IAC1C,CAAC;IACDC,UAAUA,CAACb,MAAM,EAAE;MACf,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC,iBAAiB,EAAEf,MAAM;IAC/C;EACJ,CAAC;EACDgB,OAAOA,CAAA,EAAG;IACN,IAAI,CAACT,IAAI,CAAC;IACV,IAAI,CAACO,OAAO,CAACG,EAAE,CAAC,eAAe,EAAEC,KAAI,IAAK;MACtC,IAAI,CAACX,IAAI,CAAC;IACd,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}