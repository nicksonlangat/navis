{"ast":null,"code":"import { createStore } from 'vuex';\nimport Api from '@/services/Api';\nexport default createStore({\n  state: {\n    clients: []\n  },\n  getters: {\n    getStoredClients: state => {\n      return state.clients;\n    }\n  },\n  mutations: {\n    SET_CLIENTS(state, clients) {\n      state.clients = clients;\n    }\n  },\n  actions: {\n    async createClient({\n      commit\n    }, {\n      payload,\n      cb\n    }) {\n      return await Api().post('clients/create/', payload).then(response => {\n        if (cb) {\n          cb(response.data);\n        }\n        return response.data;\n      }).catch(error => {\n        return Promise.reject(error);\n      });\n    },\n    async getAllClients({\n      commit,\n      state\n    }, {\n      setResult = true,\n      cb\n    }) {\n      return await Api().get('/clients/list').then(response => {\n        if (setResult) {\n          commit('SET_CLIENTS', response.data.results);\n        }\n        if (cb) {\n          cb(response.data.results);\n        }\n        return response.data.results;\n      }).catch(error => {\n        return Promise.reject(error);\n      });\n    },\n    async updateClient({\n      commit\n    }, {\n      uuid,\n      payload,\n      cb\n    }) {\n      return await Api().put(`clients/update/${uuid}/`, payload).then(response => {\n        if (cb) {\n          cb(response.data);\n        }\n        return response.data;\n      }).catch(error => {\n        return Promise.reject(error);\n      });\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","Api","state","clients","getters","getStoredClients","mutations","SET_CLIENTS","actions","createClient","commit","payload","cb","post","then","response","data","catch","error","Promise","reject","getAllClients","setResult","get","results","updateClient","uuid","put","modules"],"sources":["/Users/nicklangat/Desktop/portfolio/logistics/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport Api from '@/services/Api'\n\nexport default createStore({\n  state: {\n    clients: [],\n  },\n  getters: {\n    getStoredClients: (state) => {\n      return state.clients\n  },\n  },\n  mutations: {\n    SET_CLIENTS(state, clients) {\n      state.clients = clients\n  },\n  },\n  actions: {\n    async createClient({ commit }, { payload, cb }) {\n      return await Api()\n          .post('clients/create/', payload)\n          .then((response) => {\n              if (cb) {\n                  cb(response.data)\n              }\n              return response.data\n          })\n          .catch((error) => {\n              return Promise.reject(error)\n          })\n  },\n  async getAllClients({ commit, state }, { setResult=true, cb }) {\n    return await Api()\n        .get('/clients/list')\n        .then((response) => {\n            if (setResult) {\n                commit('SET_CLIENTS', response.data.results)\n            }\n            if (cb) {\n                cb(response.data.results)\n            }\n            return response.data.results\n        })\n        .catch((error) => {\n            return Promise.reject(error)\n        })\n},\nasync updateClient({ commit }, { uuid, payload, cb }) {\n  return await Api()\n      .put(`clients/update/${uuid}/`, payload)\n      .then((response) => {\n          if (cb) {\n              cb(response.data)\n          }\n          return response.data\n      })\n      .catch((error) => {\n          return Promise.reject(error)\n      })\n},\n  },\n\n\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,GAAG,MAAM,gBAAgB;AAEhC,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,OAAO,EAAE;EACX,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgB,EAAGH,KAAK,IAAK;MAC3B,OAAOA,KAAK,CAACC,OAAO;IACxB;EACA,CAAC;EACDG,SAAS,EAAE;IACTC,WAAWA,CAACL,KAAK,EAAEC,OAAO,EAAE;MAC1BD,KAAK,CAACC,OAAO,GAAGA,OAAO;IAC3B;EACA,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAAEC,OAAO;MAAEC;IAAG,CAAC,EAAE;MAC9C,OAAO,MAAMX,GAAG,CAAC,CAAC,CACbY,IAAI,CAAC,iBAAiB,EAAEF,OAAO,CAAC,CAChCG,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIH,EAAE,EAAE;UACJA,EAAE,CAACG,QAAQ,CAACC,IAAI,CAAC;QACrB;QACA,OAAOD,QAAQ,CAACC,IAAI;MACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QACd,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;MAChC,CAAC,CAAC;IACV,CAAC;IACD,MAAMG,aAAaA,CAAC;MAAEX,MAAM;MAAER;IAAM,CAAC,EAAE;MAAEoB,SAAS,GAAC,IAAI;MAAEV;IAAG,CAAC,EAAE;MAC7D,OAAO,MAAMX,GAAG,CAAC,CAAC,CACbsB,GAAG,CAAC,eAAe,CAAC,CACpBT,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIO,SAAS,EAAE;UACXZ,MAAM,CAAC,aAAa,EAAEK,QAAQ,CAACC,IAAI,CAACQ,OAAO,CAAC;QAChD;QACA,IAAIZ,EAAE,EAAE;UACJA,EAAE,CAACG,QAAQ,CAACC,IAAI,CAACQ,OAAO,CAAC;QAC7B;QACA,OAAOT,QAAQ,CAACC,IAAI,CAACQ,OAAO;MAChC,CAAC,CAAC,CACDP,KAAK,CAAEC,KAAK,IAAK;QACd,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;MAChC,CAAC,CAAC;IACV,CAAC;IACD,MAAMO,YAAYA,CAAC;MAAEf;IAAO,CAAC,EAAE;MAAEgB,IAAI;MAAEf,OAAO;MAAEC;IAAG,CAAC,EAAE;MACpD,OAAO,MAAMX,GAAG,CAAC,CAAC,CACb0B,GAAG,CAAE,kBAAiBD,IAAK,GAAE,EAAEf,OAAO,CAAC,CACvCG,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIH,EAAE,EAAE;UACJA,EAAE,CAACG,QAAQ,CAACC,IAAI,CAAC;QACrB;QACA,OAAOD,QAAQ,CAACC,IAAI;MACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QACd,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;MAChC,CAAC,CAAC;IACR;EACE,CAAC;EAGDU,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}